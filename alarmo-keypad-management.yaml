blueprint:
  name: Alarmo keypad management
  description: Keypad management for Alarmo with Zigbee2MQTT.
  domain: automation

  input:
    state_topic:
      name: MQTT State Topic of your Zigbee2MQTT Keypad
      description:
        "The State Topic is composed of your Zigbee2MQTT base_topic (see your Z2M Addon
        Configuration) and the Friendly Name of your keypad in Z2M. Example: zigbee2mqtt/Keypad"
      selector:
        text:
    set_topic:
      name: MQTT Set Topic of your Zigbee2MQTT Keypad
      description:
        "This is the same as your State Topic, with the addition of /set. Example:
        zigbee2mqtt/Keypad/set"
      selector:
        text:
    entity:
      name: Alarmo entity
      description: An alarm control panel entity from alarmo.
      selector:
        entity:
          domain: alarm_control_panel
          integration: alarmo

mode: parallel
max: 10

triggers:
  - trigger: mqtt
    topic: !input state_topic
    id: keypad_command
  - trigger: event
    event_type: alarmo_failed_to_arm
    id: event_arm_failure
  - trigger: event
    event_type: alarmo_command_success
    id: event_command_success
  - trigger: state
    entity_id: !input entity
    not_to:
      - unavailable
      - unknown
    id: state_changed

action:
  - choose:
      - conditions:
          - condition: trigger
            id: keypad_command
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.payload_json.action == "disarm" }}'
                sequence:
                  - action: alarmo.disarm
                    data:
                      entity_id: !input entity
                      code: "{{ trigger.payload_json.action_code }}"
                      context_id: "{{ trigger.payload_json.action_transaction }}"
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.payload_json.action == "arm_all_zones" }}'
                sequence:
                  - action: alarmo.arm
                    data:
                      entity_id: !input entity
                      mode: away
                      code: "{{ trigger.payload_json.action_code }}"
                      context_id: "{{ trigger.payload_json.action_transaction }}"
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.payload_json.action == "arm_day_zones" }}'
                sequence:
                  - action: alarmo.arm
                    data:
                      entity_id: !input entity
                      mode: home
                      code: "{{ trigger.payload_json.action_code }}"
                      context_id: "{{ trigger.payload_json.action_transaction }}"
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.payload_json.action == "arm_night_zones" }}'
                sequence:
                  - action: alarmo.arm
                    data:
                      entity_id: !input entity
                      mode: night
                      code: "{{ trigger.payload_json.action_code }}"
                      context_id: "{{ trigger.payload_json.action_transaction }}"
      - conditions:
          - condition: trigger
            id: event_arm_failure
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.reason == 'invalid_code' }}"
                sequence:
                  - action: mqtt.publish
                    data:
                      topic: !input set_topic
                      payload: |-
                        {
                          "arm_mode":
                          {
                            "transaction": {{ trigger.event.data.context_id }},
                            "mode": "invalid_code"
                          }
                        }
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.reason == 'open_sensors' }}"
                sequence:
                  - action: mqtt.publish
                    data:
                      topic: !input set_topic
                      payload: |-
                        {
                          "arm_mode":
                          {
                            "transaction": {{ trigger.event.data.context_id }},
                            "mode": "not_ready"
                          }
                        }
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.reason == 'not_allowed' }}"
                  - condition: template
                    value_template: "{{ trigger.event.data.command|lower == 'disarm' }}"
                sequence:
                  - action: mqtt.publish
                    data:
                      topic: !input set_topic
                      payload: |-
                        {
                          "arm_mode":
                          {
                            "transaction": {{ trigger.event.data.context_id }},
                            "mode": "already_disarmed"
                          }
                        }
      - conditions:
          - condition: trigger
            id: event_command_success
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.action == 'arm' }}"
                  - condition: template
                    value_template: "{{ trigger.event.data.context_id != null }}"
                  - condition: template
                    value_template:
                      "{{ trigger.event.data.mode in ['away', 'vacation', 'custom'] }}"
                sequence:
                  - action: mqtt.publish
                    data:
                      topic: !input set_topic
                      payload: |-
                        {
                          "arm_mode":
                          {
                            "transaction": {{ trigger.event.data.context_id }},
                            "mode": "arm_all_zones"
                          }
                        }
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.action == 'arm' }}"
                  - condition: template
                    value_template: "{{ trigger.event.data.context_id != null }}"
                  - condition: template
                    value_template: "{{ trigger.event.data.mode == 'home' }}"
                sequence:
                  - action: mqtt.publish
                    data:
                      topic: !input set_topic
                      payload: |-
                        {
                          "arm_mode":
                          {
                            "transaction": {{ trigger.event.data.context_id }},
                            "mode": "arm_day_zones"
                          }
                        }
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.action == 'arm' }}"
                  - condition: template
                    value_template: "{{ trigger.event.data.context_id != null }}"
                  - condition: template
                    value_template: "{{ trigger.event.data.mode == 'night' }}"
                sequence:
                  - action: mqtt.publish
                    data:
                      topic: !input set_topic
                      payload: |-
                        {
                          "arm_mode":
                          {
                            "transaction": {{ trigger.event.data.context_id }},
                            "mode": "arm_night_zones"
                          }
                        }
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.action == 'disarm' }}"
                  - condition: template
                    value_template: "{{ trigger.event.data.context_id != null }}"
                sequence:
                  - action: mqtt.publish
                    data:
                      topic: !input set_topic
                      payload: |-
                        {
                          "arm_mode":
                          {
                            "transaction": {{ trigger.event.data.context_id }},
                            "mode": "disarm"
                          }
                        }
    default:
      - choose:
          - conditions:
              - condition: state
                entity_id: !input entity
                state: disarmed
            sequence:
              - action: mqtt.publish
                data:
                  topic: !input set_topic
                  payload: |-
                    {
                      "arm_mode":
                      {
                        "mode": "disarm"
                      }
                    }
          - conditions:
              - condition: state
                entity_id: !input entity
                state: armed_night
            sequence:
              - action: mqtt.publish
                data:
                  topic: !input set_topic
                  payload: |-
                    {
                      "arm_mode":
                      {
                        "mode": "arm_night_zones"
                      }
                    }
          - conditions:
              - condition: state
                entity_id: !input entity
                state: armed_home
            sequence:
              - action: mqtt.publish
                data:
                  topic: !input set_topic
                  payload: |-
                    {
                      "arm_mode":
                      {
                        "mode": "arm_day_zones"
                      }
                    }
          - conditions:
              - condition: state
                entity_id: !input entity
                state:
                  - armed_away
                  - armed_vacation
                  - armed_custom_bypass
            sequence:
              - action: mqtt.publish
                data:
                  topic: !input set_topic
                  payload: |-
                    {
                      "arm_mode":
                      {
                        "mode": "arm_all_zones"
                      }
                    }
          - conditions:
              - condition: state
                entity_id: !input entity
                state: arming
            sequence:
              - action: mqtt.publish
                data:
                  topic: !input set_topic
                  payload: |-
                    {
                      "arm_mode":
                      {
                        "mode": "exit_delay"
                      }
                    }
          - conditions:
              - condition: state
                entity_id: !input entity
                state: pending
            sequence:
              - action: mqtt.publish
                data:
                  topic: !input set_topic
                  payload: |-
                    {
                      "arm_mode":
                      {
                        "mode": "entry_delay"
                      }
                    }
          - conditions:
              - condition: state
                entity_id: !input entity
                state: triggered
            sequence:
              - action: mqtt.publish
                data:
                  topic: !input set_topic
                  payload: |-
                    {
                      "arm_mode":
                      {
                        "mode": "in_alarm"
                      }
                    }
